buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "crust.mixins.refmap.json"
}


// The mod's version and id
version = "${mc_version}-${mod_version}"
archivesBaseName = 'crust'
group = "fathertoast.${archivesBaseName}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property "mixin.debug.export", "true"
            property 'mixin.env.disableRefMap', 'true'

            arg "-mixin.config=crust.mixins.json"

            mods {
                crust {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property "mixin.debug.export", "true"
            property 'mixin.env.disableRefMap', 'true'

            arg "-mixin.config=crust.mixins.json"

            mods {
                crust {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'crust', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                crust {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'CurseMaven'
        url 'https://www.cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation fg.deobf("curse.maven:apocalypse-500443:${apocalypse_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Crust",
            "Specification-Vendor": "FatherToast",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"FatherToast",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "crust.mixins.json"
        ])
    }
}

task apiJar(type: Jar) {
    archiveClassifier.set('api')
    // Include everything except internal implementations
    include 'fathertoast/crust/api/**/*'
    exclude 'fathertoast/crust/api/impl/**/*'

    from sourceSets.main.output
    from sourceSets.main.allSource
}

artifacts {
    archives apiJar
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}